const tools = require('./tools');
const path = require('path');
const execa = require('execa');
const compilePackage = require('./compile-package');
const chalk = require('chalk');

function run(package, inputOpt) {

    const DEFAULT_OPTS = {
        skipLint: false,
        skipTest: false,
        skipCompile: false,
        externals: {},
        rootPath: path.resolve(process.cwd()),
        packageRootPath: 'src/packages'
    };

    const opt = Object.assign(DEFAULT_OPTS, inputOpt);

    if (!package) {
        console.log(chalk.red('ERROR : no package specified!!!'));
        return;
    }

    const packagePath = path.join(opt.rootPath, opt.packageRootPath, package);
    const packageTestReportsPath = path.join(packagePath, 'test/reports');

    return Promise.resolve()
        .then(() => {
            console.log('\n\n---------------------------------------------------');
            console.log(chalk.cyan('Building package : ', `${package}...`));
            console.log('---------------------------------------------------');
        })
        .then(() => {
            console.log('-- Cleaning');
            tools.runScript(`rimraf ${packagePath}/out-tsc ${packagePath}/dist`);
            console.log(chalk.green('----> OK'));
        })
        .then(() => {
            if (!opt.skipLint) {
                console.log('-- Linting');
                tools.runScript(`tslint ${packagePath}/src/lib/src/**/*.ts`);
                console.log(chalk.green('----> OK'));
            }
        })
        .then(() => {
            if (!opt.skipTest) {
                console.log('-- Test - compiling');
                tools.runScript(`tsc -p ${packagePath}/src/lib/tsconfig.spec.json`);
                console.log(chalk.green('----> OK'));
            }
        })
        .then(() => {
            if (!opt.skipTest) {
                console.log('-- Test - Cleaning test reports');
                tools.runScript(`rimraf ${packageTestReportsPath}`);
                console.log(chalk.green('----> OK'));
            }
        })
        .then(() => {
            if (!opt.skipTest) {
                console.log('-- Test - Launching Karma');
                tools.runScript(`karma start ${packagePath}/karma.conf.pkg.js --single-run`);
                console.log(chalk.green('----> OK'));
            }
        })
        .then(() => {
            if (!opt.skipTest) {
                console.log('-- Test - generating coverage report');
                tools.runScript(`remap-istanbul -i ${packageTestReportsPath}/coverage/coverage-final.json -o ${packageTestReportsPath}/coverage/html-report -t html`);
                console.log(chalk.green('----> OK'));
            }
        })
        .then(() => {
            if (!opt.skipCompile) {
                console.log('-- Compiling package');
                return compilePackage.run(
                    package, {
                        externals: opt.externals,
                        rootPath: opt.rootPath,
                        packageRootPath: opt.packageRootPath
                    }
                );
            }
        })
        .then(() => {
            console.log('\n----------------------------------------------');
            console.log(chalk.green(" Build Success."));
            console.log('----------------------------------------------');
        })
        .catch((e) => {
            console.log('\n----------------------------------------------');
            console.log(chalk.red(" Build ERROR."));
            console.log('----------------------------------------------');
            console.log(e);
            process.exit(1);
        });

}

module.exports.run = run;
