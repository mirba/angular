'use strict';

const path = require('path');
const fs = require('fs');

const configProject = require('./project');
const utilsPackages = require('../scripts/utils/packages');

const rootDirectory = fs.realpathSync(process.cwd());
const resolvePath = relativePath => path.resolve(rootDirectory, relativePath);

module.exports = (pkgInfo = {}) => {
    if (pkgInfo.insidePkgFolder) {
        return {
            pkgDirectory: rootDirectory,
            pkgBuild: resolvePath('dist'),
            pkgJson: resolvePath('package.json'),
            pkgSrc: resolvePath('src'),
            pkgLibFolder: resolvePath('src/lib'),
        };
    }

    let paths = {
        rootDirectory,
        repoPackageJson: resolvePath('package.json'),
        repoNodeModules: resolvePath('node_modules'),
        packages: resolvePath(configProject.paths.packages),
    };

    if (pkgInfo.isRoot !== true) {
        const folder = configProject.packages[pkgInfo.pkg].folder || pkgInfo.pkg;

        paths = Object.assign(paths, {
            pkgDirectory: resolvePath(configProject.paths.packages + '/' + folder),
            pkgBuild: resolvePath(configProject.paths.packages + '/' + folder + '/dist'),
            pkgJson: resolvePath(configProject.paths.packages + '/' + folder + '/package.json'),
            pkgSrc: resolvePath(configProject.paths.packages + '/' + folder + '/src'),
            pkgLibFolder: resolvePath(configProject.paths.packages + '/' + folder + '/src/lib'),
        });
    }

    return paths;
};
