'use strict';

const path = require('path');
const arrify = require('arrify');
const chalk = require('chalk');
const argv = require('yargs').argv;

const { nodeModulePackagesVersions } = require('./utils/packages');
const {
    exportAppInfos, exportAppPackagesVersions, exportAppConfig, exportPomVersion,
    getAppProperties, getAppVersion, setPaths
} = require('./utils/app.js');

const rootFolder = argv.target ? path.resolve(process.cwd(), argv.target) : process.cwd();
const rootSrcFolder = argv.rootSrcFolder ? argv.rootSrcFolder : 'src';
const nmPath = path.resolve(rootFolder, 'node_modules');

return Promise.resolve()
    .then(() => {
        setPaths(rootFolder, rootSrcFolder);
    })
    .then(() => {
        let packages = [];
        let scopes = [];

        if (argv.packages) {
            packages = arrify(argv.packages.split(','));
        }

        if (argv.scopes) {
            scopes = arrify(argv.scopes.split(',')).map(s => '@' + s);
        }

        const versions = nodeModulePackagesVersions(packages, scopes, nmPath)

        if (!argv.fromPackageJson) {
            exportAppInfos(getAppVersion());
        } else {
            exportAppInfos();
        }

        exportAppPackagesVersions(versions);
        exportAppConfig();
        exportPomVersion();

        console.log('\n\n---------------------------------------------------');
        console.log(chalk.cyan('Extracting APP infos...'));
        console.log(chalk.green(getAppProperties()));
        console.log('---------------------------------------------------');
    })
    .catch((error) => {
        console.log('\Build failed. See below for errors.\n');
        console.log(error);
        process.exit(1);
    });
