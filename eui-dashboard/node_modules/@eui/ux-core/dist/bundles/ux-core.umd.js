(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/add/operator/map'), require('rxjs/add/operator/debounceTime'), require('rxjs/add/operator/do'), require('rxjs/add/operator/catch'), require('rxjs/add/operator/mergeMap'), require('rxjs/add/operator/switchMap'), require('rxjs/add/operator/distinctUntilChanged'), require('rxjs/add/operator/delay'), require('rxjs/add/operator/take'), require('rxjs/add/operator/filter'), require('rxjs/add/observable/of'), require('rxjs/add/observable/forkJoin'), require('rxjs/add/observable/throw'), require('@eui/core')) :
	typeof define === 'function' && define.amd ? define(['exports', 'rxjs/add/operator/map', 'rxjs/add/operator/debounceTime', 'rxjs/add/operator/do', 'rxjs/add/operator/catch', 'rxjs/add/operator/mergeMap', 'rxjs/add/operator/switchMap', 'rxjs/add/operator/distinctUntilChanged', 'rxjs/add/operator/delay', 'rxjs/add/operator/take', 'rxjs/add/operator/filter', 'rxjs/add/observable/of', 'rxjs/add/observable/forkJoin', 'rxjs/add/observable/throw', '@eui/core'], factory) :
	(factory((global.uxCore = {}),global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable,global.Rx.Observable,global.Rx.Observable,global.core));
}(this, (function (exports,map,debounceTime,_do,_catch,mergeMap,switchMap,distinctUntilChanged,delay,take,filter,of,forkJoin,_throw,core) { 'use strict';

	/**
	 * @fileoverview added by tsickle
	 * @suppress {checkTypes} checked by tsc
	 */

	/**
	 * @fileoverview added by tsickle
	 * @suppress {checkTypes} checked by tsc
	 */

	/**
	 * @fileoverview added by tsickle
	 * @suppress {checkTypes} checked by tsc
	 */

	exports.CoreModule = core.CoreModule;
	exports.getConfig = core.getConfig;
	exports.CONFIG_TOKEN = core.CONFIG_TOKEN;
	exports.UxModule = core.UxModule;
	exports.UxAllModule = core.UxAllModule;
	exports.StoreService = core.StoreService;
	exports.reducers = core.reducers;
	exports.localStorageSync = core.localStorageSync;
	exports.getAppState = core.getAppState;
	exports.getUserState = core.getUserState;
	exports.getUserIdState = core.getUserIdState;
	exports.getUserPrefsState = core.getUserPrefsState;
	exports.getAppConnection = core.getAppConnection;
	exports.getAppStatus = core.getAppStatus;
	exports.getApiQueue = core.getApiQueue;
	exports.getApiQueueById = core.getApiQueueById;
	exports.appReducer = core.appReducer;
	exports.userReducer = core.userReducer;
	exports.getUserId = core.getUserId;
	exports.getUserPreferences = core.getUserPreferences;
	exports.notificationReducer = core.notificationReducer;
	exports.RouteUpdateAction = core.RouteUpdateAction;
	exports.ChangeModuleAction = core.ChangeModuleAction;
	exports.ApiQueueAdd = core.ApiQueueAdd;
	exports.ApiQueueRemove = core.ApiQueueRemove;
	exports.UpdateListAction = core.UpdateListAction;
	exports.UpdateUserDetailAction = core.UpdateUserDetailAction;
	exports.UpdateUserPreferencesAction = core.UpdateUserPreferencesAction;
	exports.CoreModuleEffects = core.CoreModuleEffects;
	exports.LocalizationService = core.LocalizationService;
	exports.translateStaticLoader = core.translateStaticLoader;
	exports.translateConfig = core.translateConfig;
	exports.StorageService = core.StorageService;
	exports.LocalstorageService = core.LocalstorageService;
	exports.UserService = core.UserService;
	exports.UxAuthService = core.UxAuthService;
	exports.UxAuthGuardService = core.UxAuthGuardService;
	exports.UxPermissionService = core.UxPermissionService;
	exports.UxDynamicMenuService = core.UxDynamicMenuService;
	exports.RouteService = core.RouteService;
	exports.GlobalErrorHandler = core.GlobalErrorHandler;
	exports.QueueApiService = core.QueueApiService;
	exports.UxService = core.UxService;
	exports.UxDomService = core.UxDomService;
	exports.UxAppShellService = core.UxAppShellService;
	exports.DYNAMIC_COMPONENT_CONFIG = core.DYNAMIC_COMPONENT_CONFIG;
	exports.UxDynamicComponentService = core.UxDynamicComponentService;
	exports.UxAssetsService = core.UxAssetsService;
	exports.UxTimezoneService = core.UxTimezoneService;
	exports.LOG_LEVEL = core.LOG_LEVEL;
	exports.TraceService = core.TraceService;
	exports.HttpService = core.HttpService;
	exports.RequestErrorInterceptor = core.RequestErrorInterceptor;
	exports.ResponseErrorHandlerTypes = core.ResponseErrorHandlerTypes;
	exports.CachePreventionInterceptor = core.CachePreventionInterceptor;
	exports.CorsSecurityInterceptor = core.CorsSecurityInterceptor;
	exports.CsrfPreventionInterceptor = core.CsrfPreventionInterceptor;
	exports.EuLoginSessionTimeoutHandlingInterceptor = core.EuLoginSessionTimeoutHandlingInterceptor;
	exports.OpenidConnectInterceptor = core.OpenidConnectInterceptor;
	exports.OpenidConnectService = core.OpenidConnectService;
	exports.UxBadge = core.UxBadge;
	exports.UxLink = core.UxLink;
	exports.UX_COLORS = core.UX_COLORS;
	exports.UX_I18N = core.UX_I18N;
	exports.UX_COUNTRIES = core.UX_COUNTRIES;
	exports.UX_TIMEZONES = core.UX_TIMEZONES;

	Object.defineProperty(exports, '__esModule', { value: true });

})));
