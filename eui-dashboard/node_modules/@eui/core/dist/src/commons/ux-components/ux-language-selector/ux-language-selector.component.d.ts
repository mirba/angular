import { OnInit, EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { UxLanguage } from './ux-language';
import { UxService } from '../../../core/app/ux.service';
import { StorageService } from '../../../core/storage/storage.service';
export declare class UxLanguageSelectorComponent implements OnInit, OnChanges {
    private shadowDomRoot;
    private uxService;
    private storageService;
    private translateService;
    languageCodes: string;
    additionalLanguages: UxLanguage[];
    selectedLanguage: UxLanguage;
    isShowLabel: boolean;
    languageChanged: EventEmitter<UxLanguage>;
    modalId: string;
    languages: UxLanguage[];
    languageRows: UxLanguage[][];
    dropDownIsOpen: boolean;
    readonly isShowDropDown: boolean;
    readonly isShowModal: boolean;
    constructor(shadowDomRoot: ElementRef, uxService: UxService, storageService: StorageService, translateService: TranslateService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    shadowDomQuery(querySelector: string): HTMLElement;
    prepareLanguageRows(): UxLanguage[][];
    selectLanguage(languageCode: string): void;
    getLanguageLabel(languageCode: string): string;
    toggleOutside(evt: any): void;
    openKeyDown(keyCode: number): void;
    open(): void;
    close(): void;
    closeModalOnEscape(keyCode: number): void;
    consumeEvent(event: Event): boolean;
    toggleDropDownKeyDown(keyCode: number): void;
    toggleDropDown(): void;
    selectDropdownLanguage(languageCode: string): void;
    closeDropDownOnEscape(keyCode: number): void;
    closeOnBlur(): void;
    navigateDropDownSelection(event: KeyboardEvent): void;
}
export declare class UxLanguageSelectorComponentModule {
}
