import { ElementRef, OnInit, QueryList, EventEmitter, AfterViewInit } from '@angular/core';
import { ControlValueAccessor, FormControl } from '@angular/forms';
import { UxService } from '../../../core/app/ux.service';
import { UxLink } from '../../../core/models/ux-link.model';
import { Observable } from 'rxjs/Observable';
export declare class UxFieldSearchComponent implements ControlValueAccessor, AfterViewInit, OnInit {
    private uxService;
    styleClass: string;
    inputPlaceholderLabel: string;
    searchButtonLabel: string;
    searchButtonAsIcon: boolean;
    filterContentWidth: string;
    filterContentHeight: string;
    isFilterButtonTrigger: boolean;
    isDropdownFilter: boolean;
    isAutofocus: boolean;
    suggestions: boolean;
    suggestionsData: any[];
    defaultValue: string;
    dropdownFilterStyleClass: string;
    dropdownFilterLabel: string;
    dropdownFilterIconClass: string;
    dropdownFilterTypeClass: string;
    dropdownFilterIsSplitButtonToggle: boolean;
    dropdownFilterIsDropDownRightAligned: boolean;
    dropdownFilterIsUpdateLabelFromSelectedItem: boolean;
    dropdownFilterIsOutline: boolean;
    dropdownFilterIsDisabled: boolean;
    dropdownFilterWidth: string;
    dropdownFilterMaxHeight: string;
    dropdownFilterLinks: UxLink[];
    search: EventEmitter<string>;
    isFilterActive: boolean;
    data: any;
    dropdownFilterHasItems: boolean;
    translatedSearchButtonLabel: string;
    inputElementRef: ElementRef;
    customFilterContent: QueryList<UxFieldSearchFilterContentTagDirective>;
    searchField: FormControl;
    filteredOptions: Observable<any[]>;
    constructor(uxService: UxService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    _filter(name: string): any[];
    onClearClick(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    onChange(event: any): void;
    onKeyup(event: any): void;
    onSearch(event: any): void;
    onTouched(event: any): void;
    focus(): void;
    private propagateChange;
    private propagateTouched;
}
export declare class UxFieldSearchFilterContentTagDirective {
}
export declare class UxFieldSearchComponentModule {
}
