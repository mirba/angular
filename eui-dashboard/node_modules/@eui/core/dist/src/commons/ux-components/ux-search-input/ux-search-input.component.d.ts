import { EventEmitter, ElementRef, AfterContentInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { UxSearchInputSuggestionsService } from './ux-search-input-suggestions.service';
import 'rxjs/add/operator/debounceTime';
import { UxService } from '../../../core/app/ux.service';
export declare class UxSearchInputComponent implements AfterContentInit {
    private shadowDomRoot;
    private uxService;
    minCharacters: number;
    maxHistoryEntries: number;
    keyboardDebounceTime: number;
    historicalSearches: string[];
    suggestionsService: UxSearchInputSuggestionsService;
    search: EventEmitter<string>;
    query: string;
    suggestions: string[];
    autocompleteLoading: boolean;
    historicalSearchesVisible: boolean;
    suggestionsVisible: boolean;
    noSuggestionsFound: boolean;
    ignoreInputBlur: boolean;
    control: FormControl;
    searchInput: HTMLInputElement;
    constructor(shadowDomRoot: ElementRef, uxService: UxService);
    ngAfterContentInit(): void;
    getQuery(): string;
    setQuery(query: string): void;
    focus(): void;
    focusAndSelect(): void;
    hideSuggestions(): void;
    showSuggestions(): void;
    startSearch(): void;
    showHistoricalSearches(): void;
    searchInputBlur(): void;
    searchInputKeydown(event: KeyboardEvent): void;
    searchInputClick(event: any): void;
    suggestionKeydown(event: KeyboardEvent): void;
    suggestionBlur(): void;
    selectActiveSuggestion(): void;
    suggestionClicked(event: MouseEvent): void;
    getActiveSuggestion(): HTMLElement;
    protected shadowDomQuery(querySelector: string): HTMLElement;
    protected consumeEvent(event: Event): boolean;
    protected ignoreBlur(): void;
    protected allowBlur(): void;
    protected hideSuggestionOnEscape(event: KeyboardEvent): void;
    protected focusOnMenuItem(menuItem: HTMLElement): void;
    protected focusFirstSuggestion(activeSuggestion: HTMLElement): void;
    protected focusNextSuggestion(event: KeyboardEvent): void;
    protected focusPreviousSuggestion(event: KeyboardEvent): void;
    protected inactivateActiveSuggestion(): void;
    protected storeHistoricalSearch(): void;
    protected getSuggestions(): void;
}
export declare class UxSearchInputComponentModule {
}
