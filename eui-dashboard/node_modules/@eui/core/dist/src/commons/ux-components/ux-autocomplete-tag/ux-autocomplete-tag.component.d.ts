import { EventEmitter, ElementRef, AfterContentInit, Renderer2, AfterViewInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { UxAutocompleteTagItem } from './ux-autocomplete-tag-item.model';
import { UxService } from '../../../core/app/ux.service';
import { PlacementService } from '../../shared/geometry/services/placement/placement.service';
export declare const UX_AUTOCOMPLETETAG_VALUE_ACCESSOR: any;
export declare class UxAutocompleteTagComponent implements AfterContentInit, AfterViewInit, ControlValueAccessor {
    private uxService;
    private renderer;
    private placementService;
    isReadOnly: boolean;
    items: UxAutocompleteTagItem[];
    selectedItems: UxAutocompleteTagItem[];
    placeholder: string;
    isFreeTagsAllowed: boolean;
    maxRequiredItemsCount: number;
    minRequiredItemsCount: number;
    isBadgeSmall: boolean;
    formControlName: string;
    isDisplayTagsListBelow: boolean;
    selectionChanged: EventEmitter<UxAutocompleteTagItem[]>;
    isSelectionValid: EventEmitter<boolean>;
    itemAdded: EventEmitter<UxAutocompleteTagItem>;
    itemRemoved: EventEmitter<UxAutocompleteTagItem>;
    inputEl: ElementRef;
    dropdownEl: ElementRef;
    private onChange;
    private onTouched;
    query: string;
    filteredList: UxAutocompleteTagItem[];
    elementRef: any;
    selectedIdx: number;
    isValid: boolean;
    requiredItemsCountValidationMessage: string;
    badgeSizeClass: string;
    constructor(uxService: UxService, renderer: Renderer2, placementService: PlacementService);
    ngAfterViewInit(): void;
    focusOut(event: Event): void;
    ngAfterContentInit(): void;
    onInputKeyup(event: any): void;
    trackByFn(index: any, item: any): any;
    onInputClick(event: any): void;
    onToggle(event: any): void;
    onSuggestionsMouseDown(event: any): void;
    selectItem(item: UxAutocompleteTagItem): void;
    removeItem(item: UxAutocompleteTagItem): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    writeValue(value: any): void;
    setDisabledState?(isDisabled: boolean): void;
    private repositionDropdown();
    private updateSelection();
    private reset();
    private updateFilteredList();
    private checkValidity();
}
export declare class UxAutocompleteTagComponentModule {
}
