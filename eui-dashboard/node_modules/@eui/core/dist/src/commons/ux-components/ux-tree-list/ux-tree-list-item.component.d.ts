import { AfterContentInit, QueryList, ElementRef, EventEmitter } from '@angular/core';
import { UxTreeListComponent } from './ux-tree-list.component';
import { UxLink } from '../../../core/models/ux-link.model';
import { UxService } from '../../../core/app/ux.service';
export declare class UxTreeListItemComponent implements AfterContentInit {
    private uxService;
    protected elementRef: ElementRef;
    styleClass: string;
    headerStyleClass: string;
    id: string;
    label: string;
    linkUrl: string;
    subLabel: string;
    iconClass: string;
    active: boolean;
    expanded: boolean;
    alwaysExpanded: boolean;
    url: string;
    isDisplaySubLinksOnHover: boolean;
    subLinks: UxLink[];
    typeClass: string;
    hasMarker: boolean;
    markerTypeClass: string;
    isNavigateOnlyOnLabelClick: boolean;
    isIconRounded: boolean;
    iconTypeClass: string;
    toggled: EventEmitter<UxTreeListItemComponent>;
    focusable: ElementRef;
    isVisible: boolean;
    isHovered: boolean;
    treeListComponent: UxTreeListComponent;
    hasSub: boolean;
    hasCustomContent: boolean;
    subTreeList: QueryList<UxTreeListComponent>;
    customSubLabel: QueryList<UxTreeListItemSubLabelTagDirective>;
    customContent: QueryList<UxTreeListItemCustomContentTagDirective>;
    customDetailContent: QueryList<UxTreeListItemDetailsContentTagDirective>;
    customSubContainerContent: QueryList<UxTreeListItemSubContainerContentTagDirective>;
    constructor(treeListComponent: UxTreeListComponent, uxService: UxService, elementRef: ElementRef);
    ngAfterContentInit(): void;
    toggle(event: Event): void;
    navigateToLink(event: any): void;
    onLabelClicked(event: any): void;
    onKeyDown(event: any): void;
    setVisibleState(state: boolean): void;
    setExpandedState(state: boolean): void;
    focus(): void;
    focusOnLastExpandedTreeItem(): void;
    readonly hasCustomDetailContent: QueryList<UxTreeListItemDetailsContentTagDirective>;
    readonly hasCustomSubContainerContent: QueryList<UxTreeListItemSubContainerContentTagDirective>;
    protected focusOnNextTreeItem(): boolean;
    protected disableFocus(): void;
    protected enableFocus(): void;
}
export declare class UxTreeListItemCustomContentTagDirective {
}
export declare class UxTreeListItemRightContentTagDirective {
}
export declare class UxTreeListItemSubLabelTagDirective {
}
export declare class UxTreeListItemDetailsContentTagDirective {
}
export declare class UxTreeListItemSubContainerContentTagDirective {
}
export declare class UxTreeListItemComponentModule {
}
