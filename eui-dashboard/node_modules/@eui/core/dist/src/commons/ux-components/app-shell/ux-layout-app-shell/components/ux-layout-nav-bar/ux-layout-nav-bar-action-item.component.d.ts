import { EventEmitter, AfterContentInit, QueryList } from '@angular/core';
import { UxLanguage } from '../../../../ux-language-selector/ux-language';
import { UxLink } from '../../../../../../core/models/ux-link.model';
import { UxAppShellService } from '../../../../../../core/app/ux-app-shell.service';
import { UxService } from '../../../../../../core/app/ux.service';
export declare class UxLayoutNavBarActionItemComponent implements AfterContentInit {
    uxService: UxService;
    asService: UxAppShellService;
    id: string;
    isToggleContent: boolean;
    isOverlayPanel: boolean;
    isOverlayPanelCustomContent: boolean;
    isOverlayPanelBg: boolean;
    links: Array<UxLink>;
    isShowHome: boolean;
    homeUrl: string;
    iconClass: string;
    isIconLarge: boolean;
    itemClass: string;
    contentClass: string;
    tagCount: number;
    isShowTagAsBullet: boolean;
    userInfos: string;
    userInfosIconClass: string;
    isHiddenMobile: boolean;
    isMobileOnly: boolean;
    isHiddenDesktop: boolean;
    isUseSidebarTemplateAsLinks: boolean;
    isActive: boolean;
    isContentFixedHeight: boolean;
    headerUserProfileLinks: UxLink[];
    languageCodes: string;
    additionalLanguages: UxLanguage[];
    selectedLanguage: UxLanguage;
    isShowLanguageSelector: boolean;
    isShowBadge: boolean;
    hideBagdeOnClick: boolean;
    languageChanged: EventEmitter<UxLanguage>;
    clicked: EventEmitter<UxLayoutNavBarActionItemComponent>;
    toggled: EventEmitter<UxLayoutNavBarActionItemComponent>;
    userProfileLinkSelected: EventEmitter<UxLink>;
    customItemContent: QueryList<UxLayoutNavBarItemContentTagDirective>;
    genIconClass: string;
    constructor(uxService: UxService, asService: UxAppShellService);
    unToggleAll(): void;
    ngAfterContentInit(): void;
    onLanguageChanged(language: UxLanguage): void;
    onUserProfileLinkSelected(link: UxLink): void;
    toggle(event: Event): void;
    showBadge(): void;
    hideBadge(): void;
    onClick(event: Event): void;
    onSidebarItemClick(event: Event): void;
    getResponsiveClasses(): string;
}
export declare class UxLayoutNavBarOverlayPanelContentTagDirective {
}
export declare class UxLayoutNavBarOverlayHeaderPanelContentTagDirective {
}
export declare class UxLayoutNavBarItemContentTagDirective {
}
export declare class UxLayoutNavBarActionItemComponentModule {
}
