import { UxButtonConfig } from '../ux-button/ux-button.config.model';
export declare class UxDynamicModalConfig {
    id: string;
    styleClass: string;
    titleLabel: string;
    dismissLabel: string;
    dismissDisabled: boolean;
    acceptLabel: string;
    acceptActionDisabled: boolean;
    dismissActionDisabled: boolean;
    isFooterVisible: boolean;
    isKeepBodyScroll: boolean;
    isSizeSmall: boolean;
    isSizeLarge: boolean;
    isSizeFullScreen: boolean;
    isSizeFullHeight: boolean;
    isSizeMediumHeight: boolean;
    isShowActionIcons: boolean;
    messageBoxType: string;
    acceptIconClass: string;
    dismissIconClass: string;
    hasNoBodyPadding: boolean;
    customWidth: string;
    isFooterCustomAlignment: boolean;
    isCloseModalOnEscape: boolean;
    isShowCloseButton: boolean;
    isMessageBox: boolean;
    isHandleCloseOnDismiss: boolean;
    isHandleCloseOnAccept: boolean;
    isHandleCloseOnClose: boolean;
    bodyStyleClass: string;
    footerStyleClass: string;
    isOverflowVisible: boolean;
    content: string;
    bodyInjectedComponent: {
        component: any;
        config: any;
    };
    customFooterContent?: {
        left?: {
            buttons: UxButtonConfig[];
        };
        right?: {
            buttons: UxButtonConfig[];
        };
    };
    onClick?: (value) => any;
    onDismiss?: (portalHostRef, portalRef) => any;
    onAccept?: (portalHostRef, portalRef) => any;
    onClose?: (portalHostRef, portalRef) => any;
    constructor(values: any);
}
