import { ElementRef, EventEmitter, OnChanges, SimpleChanges, OnInit } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { ControlValueAccessor } from '@angular/forms';
export declare const EDITOR_VALUE_ACCESSOR: any;
export declare class UxEditorComponent implements ControlValueAccessor, OnInit, OnChanges {
    el: ElementRef;
    protected sanitizer: DomSanitizer;
    style: any;
    styleClass: string;
    placeholder: string;
    formats: string[];
    isEnabledOnFocus: boolean;
    isReadOnly: boolean;
    theme: string;
    onInit: EventEmitter<any>;
    onTextChange: EventEmitter<any>;
    onSelectionChange: EventEmitter<any>;
    event: Event;
    value: string;
    secureHtmlValue: any;
    _readonly: boolean;
    quill: any;
    isEnabled: boolean;
    crlf: string;
    blank: string;
    constructor(el: ElementRef, sanitizer: DomSanitizer);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onModelChange: Function;
    onModelTouched: Function;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    editorOnFocus(event: any): void;
    editorOnBlur(event: any): void;
    editorUndo(): void;
    editorRedo(): void;
    private findSingle(element, selector);
    private initQuill();
    private getSecureHTMLValue(data);
}
export declare class UxEditorComponentModule {
}
