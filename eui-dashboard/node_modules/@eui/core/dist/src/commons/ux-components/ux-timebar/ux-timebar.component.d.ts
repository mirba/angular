import { AfterContentInit, AfterViewInit, ElementRef, OnChanges, Renderer2, SimpleChanges, OnDestroy, OnInit } from '@angular/core';
import { Subscription } from 'rxjs/Subscription';
import { UxTimebarItem } from './ux-timebar-item.model';
import { UxService } from '../../../core/app/ux.service';
import { UxAppShellService } from '../../../core/app/ux-app-shell.service';
export declare class UxTimebarItemUI {
    perc: number;
    stepTypeClass: string;
    tooltipColor: string;
    isGrouped?: boolean;
    groupIndex?: number;
    groupLabel?: string;
    groupLabelMobile?: string;
    groupEndDate?: Date;
    item: UxTimebarItem;
}
export declare class UxTimebarComponent implements OnInit, AfterContentInit, AfterViewInit, OnChanges, OnDestroy {
    private uxService;
    private asService;
    private renderer2;
    items: UxTimebarItem[];
    startLabel: string;
    endLabel: string;
    dateFormat: string;
    isShowLegend: boolean;
    isShowLegendAsIndex: boolean;
    isShowCurrentDateMarker: boolean;
    isCurrentDateMarkerAlwaysInRange: boolean;
    isGroupOverlappingLabels: boolean;
    markedDate: Date;
    container: ElementRef;
    itemsUI: UxTimebarItemUI[];
    currentDate: Date;
    currentPerc: number;
    markedPerc: number;
    timebarColumnClass: string;
    subscription: Subscription;
    isShowLegendGenerated: boolean;
    isShowLegendAsIndexGenerated: boolean;
    isGroupOverlappingLabelsGenerated: boolean;
    isMobile: boolean;
    isSomeStepsAreGrouped: boolean;
    extraTimelineLabelSpace: number;
    protected maxStepWidth: number;
    constructor(uxService: UxService, asService: UxAppShellService, renderer2: Renderer2);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onBreakpointChange(bkps: any): void;
    protected removeNullItems(): void;
    protected sortItems(): void;
    protected groupOverlappingLabels(): void;
    protected clearGrouping(): void;
    protected calculateExtraTimelineLabelSpace(): void;
    protected calculatePercentage(date: Date, startDate: Date, endDate: Date, compensateForRange?: boolean): number;
}
export declare class UxTimebarComponentModule {
}
