import { Observable } from 'rxjs/Observable';
import { UxLink } from '../models/ux-link.model';
export interface UIState {
    isSidebarOpen?: boolean;
    isSidebarActive?: boolean;
    isSidebarInnerActive?: boolean;
    isSidebarStateCloseWithIcons?: boolean;
    windowWidth?: number;
    windowHeight?: number;
    breakpoint?: string;
    wrapperClasses?: string;
    breakpoints?: any;
    menuLinks?: UxLink[];
    sidebarLinks?: UxLink[];
    combinedLinks?: UxLink[];
    isBlockDocumentActive?: boolean;
}
export declare class UxAppShellService {
    private _state$;
    private _breakpoint$;
    private _breakpoints$;
    constructor();
    readonly state$: Observable<UIState>;
    readonly breakpoint$: Observable<string>;
    readonly breakpoints$: Observable<any>;
    readonly state: UIState;
    setState(nextState: UIState): void;
    isSidebarOpen: boolean;
    sidebarToggle(): void;
    sidebarLinks: UxLink[];
    menuLinks: UxLink[];
    isBlockDocumentActive: boolean;
    private getWrapperClasses(state, breakpoint);
    private getBreakpoint(windowWidth);
    private getBreakpoints(bkp);
}
