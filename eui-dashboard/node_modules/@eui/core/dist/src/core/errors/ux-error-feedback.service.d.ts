import { UxErrorFeedbackEventType, UxErrorOutput } from './ux-error-feedback.model';
import { Observable } from 'rxjs/Observable';
import { Subject } from 'rxjs/Subject';
export declare class UxErrorFeedbackService {
    errors: Subject<UxErrorFeedbackEventType>;
    constructor();
    publishError(err: UxErrorOutput, id?: string): void;
    clearError(id?: string): void;
    createLocalErrorManager(): UxErrorManager;
    createGlobalErrorManager(): UxErrorManager;
}
export declare class UxErrorManager {
    private uxErrorFeedbackService;
    private isGlobal;
    private id;
    readonly httpErrorOperator: (source: Observable<{}>) => Observable<{}>;
    constructor(uxErrorFeedbackService: UxErrorFeedbackService, isGlobal?: boolean);
    publishError(err: UxErrorOutput): void;
    clearError(): void;
    errors(): Observable<UxErrorFeedbackEventType>;
}
