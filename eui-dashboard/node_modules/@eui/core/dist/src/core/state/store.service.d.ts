import { Store } from '@ngrx/store';
import { ErrorObservable } from 'rxjs/observable/ErrorObservable';
import { TraceService } from '../trace/trace.service';
export declare class StoreService {
    private store;
    private logger;
    /**
     * autoSave handlers to call before saving in local Storage
     */
    private _autoSaveHandlers;
    static loadState(): any;
    constructor(store: Store<any>, logger: TraceService);
    initializeStore(versions: any, user?: any): void;
    addAutoSaveHandler(stateSlice: string, handler: Function): void;
    handleAutoSave(): void;
    /**
     * Proxy to ngrx store.dispatch()
     * that allows to intercept if the store is present
     */
    dispatch(action: any): void;
    /**
     * Proxy to ngrx store.select()
     * that allows to intercept if the store is present
     */
    select(key: any): Store<any> | ErrorObservable;
    private saveState(state);
}
