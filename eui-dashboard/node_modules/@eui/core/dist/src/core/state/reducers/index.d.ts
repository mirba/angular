import { AppState } from './app.reducer';
import { NotificationState } from './notifications.reducer';
import { UserState } from './user.reducer';
export interface CoreState {
    app: AppState;
    user: UserState;
    notifications: NotificationState;
}
export declare const reducers: {
    app: (state: AppState, action: any) => AppState;
    user: (state: UserState, action: any) => UserState;
    notifications: (state: NotificationState, action: any) => NotificationState;
};
export declare function localStorageSync(reducer: any): (state: any, action: any) => any;
/**
 * A selector function is a map function factory. We pass it parameters and it
 * returns a function that maps from the larger state tree into a smaller
 */
export declare const getAppState: (state: CoreState) => AppState;
export declare const getAppConnection: (state: CoreState, props?: any) => boolean;
export declare const getAppStatus: (state: CoreState, props?: any) => string;
export declare const getApiQueue: (state: CoreState, props?: any) => any;
export declare const getApiQueueById: (id: any) => (state: CoreState, props?: any) => any;
export declare const getUserState: any;
export declare const getUserIdState: any;
export declare const getUserPrefsState: any;
