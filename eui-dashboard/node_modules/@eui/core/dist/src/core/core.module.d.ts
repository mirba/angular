import { ModuleWithProviders } from '@angular/core';
import { Store } from '@ngrx/store';
import { TranslateService } from '@ngx-translate/core';
import { StoreService } from './state/index';
import { LocalizationService } from './localization/localization.service';
import { UserService } from './user/user.service';
import { UxAuthService } from './permissions/ux-auth.service';
import { UxAuthGuardService } from './permissions/ux-auth-guard.service';
import { UxPermissionService } from './permissions/ux-permission.service';
import { UxDynamicMenuService } from './permissions/ux-dynamic-menu.service';
import { TraceService } from './trace/trace.service';
import { UxErrorFeedbackService } from './errors/ux-error-feedback.service';
export interface ICoreConfig {
    appConfig: any;
    environment: any;
}
export interface IAppConfigDefault {
    global: {
        languages: Array<string>;
        defaultLanguage: string;
    };
}
export declare class OptionalDeps {
    store: Store<any>;
    constructor(store: Store<any>);
}
export declare function providersModule(appConfig: any, environment?: {}): any;
export declare class CoreModule {
    static forRoot(config?: ICoreConfig): ModuleWithProviders;
    constructor(parentModule: CoreModule);
}
export declare function storeServiceFactory(optionalDeps: OptionalDeps, logger: TraceService): StoreService;
export declare function uxAuthServiceFactory(config: any): UxAuthService;
export declare function uxAuthGuardServiceFactory(uxAuthService: any, uxPermissionService: any): UxAuthGuardService;
export declare function uxPermissionsServiceFactory(optionalDeps: OptionalDeps): UxPermissionService;
export declare function uxDynamicMenuServiceFactory(config: any, uxPermission: any, optionalDeps: any): UxDynamicMenuService;
export declare function localizationServiceFactory(translate: TranslateService, userService: UserService, logger: TraceService): LocalizationService;
export declare function errorFeedbackServiceFactory(): UxErrorFeedbackService;
