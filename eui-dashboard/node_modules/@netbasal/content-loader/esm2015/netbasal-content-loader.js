import { Component, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @return {?}
 */
function uid() {
    return Math.random()
        .toString(36)
        .substring(2);
}
class ContentLoaderComponent {
    constructor() {
        this.animate = true;
        this.width = 400;
        this.height = 130;
        this.speed = 2;
        this.preserveAspectRatio = 'xMidYMid meet';
        this.primaryColor = '#f9f9f9';
        this.secondaryColor = '#ecebeb';
        this.primaryOpacity = 1;
        this.secondaryOpacity = 1;
        this.idClip = uid();
        this.idGradient = uid();
    }
}
ContentLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'content-loader',
                template: `<svg attr.viewBox="0 0 {{width}} {{height}}" version="1.1" [attr.preserveAspectRatio]="preserveAspectRatio">

  <rect attr.clip-path="url(#{{ idClip }})" [ngStyle]="{fill: 'url(#' + idGradient + ')' }" x="0" y="0" [attr.width]="width"
    [attr.height]="height" />

  <defs>

    <clipPath [attr.id]="idClip">
      <ng-content></ng-content>
    </clipPath>

    <linearGradient [attr.id]="idGradient">

      <stop offset="0%" [attr.stop-color]="primaryColor" [attr.stop-opacity]="primaryOpacity">
        <ng-container *ngIf="animate">
          <animate attributeName="offset" values="-2; 1" attr.dur={{speed}}s repeatCount="indefinite" />
        </ng-container>
      </stop>

      <stop offset="50%" [attr.stop-color]="secondaryColor" [attr.stop-opacity]="secondaryOpacity">
        <ng-container *ngIf="animate">
          <animate attributeName="offset" values="-1.5; 1.5" attr.dur={{speed}}s repeatCount="indefinite" />
        </ng-container>
      </stop>

      <stop offset="100%" [attr.stop-color]="primaryColor" [attr.stop-opacity]="primaryOpacity">
        <ng-container *ngIf="animate">
          <animate attributeName="offset" values="-1; 2" attr.dur={{speed}}s repeatCount="indefinite" />
        </ng-container>
      </stop>

    </linearGradient>

  </defs>

</svg>
`
            },] },
];
/** @nocollapse */
ContentLoaderComponent.propDecorators = {
    "animate": [{ type: Input },],
    "width": [{ type: Input },],
    "height": [{ type: Input },],
    "speed": [{ type: Input },],
    "preserveAspectRatio": [{ type: Input },],
    "primaryColor": [{ type: Input },],
    "secondaryColor": [{ type: Input },],
    "primaryOpacity": [{ type: Input },],
    "secondaryOpacity": [{ type: Input },],
    "uniqueKey": [{ type: Input },],
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class BulletListContentLoaderComponent extends ContentLoaderComponent {
}
BulletListContentLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'bullet-list-content-loader',
                template: `
  <content-loader [animate]="animate" [width]="width" [height]="height" [speed]="speed" [preserveAspectRatio]="preserveAspectRatio"
  [primaryColor]="primaryColor" [secondaryColor]="secondaryColor" [primaryOpacity]="primaryOpacity" [secondaryColor]="secondaryColor"
  [uniqueKey]="uniqueKey">
    <svg:circle cx="10" cy="20" r="8" />
    <svg:rect x="25" y="15" rx="5" ry="5" width="220" height="10" />
    <svg:circle cx="10" cy="50" r="8" />
    <svg:rect x="25" y="45" rx="5" ry="5" width="220" height="10" />
    <svg:circle cx="10" cy="80" r="8" />
    <svg:rect x="25" y="75" rx="5" ry="5" width="220" height="10" />
    <svg:circle cx="10" cy="110" r="8" />
    <svg:rect x="25" y="105" rx="5" ry="5" width="220" height="10" />
   </content-loader>
  `
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class FacebookContentLoaderComponent extends ContentLoaderComponent {
}
FacebookContentLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'facebook-content-loader',
                template: `
  <content-loader [animate]="animate" [width]="width" [height]="height" [speed]="speed" [preserveAspectRatio]="preserveAspectRatio"
  [primaryColor]="primaryColor" [secondaryColor]="secondaryColor" [primaryOpacity]="primaryOpacity" [secondaryColor]="secondaryColor"
  [uniqueKey]="uniqueKey">
  	<svg:rect x="70" y="15" rx="4" ry="4" width="117" height="6.4" />
  	<svg:rect x="70" y="35" rx="3" ry="3" width="85" height="6.4" />
  	<svg:rect x="0" y="80" rx="3" ry="3" width="350" height="6.4" />
  	<svg:rect x="0" y="100" rx="3" ry="3" width="380" height="6.4" />
  	<svg:rect x="0" y="120" rx="3" ry="3" width="201" height="6.4" />
  	<svg:circle cx="30" cy="30" r="30" />
   </content-loader>
  `
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ListContentLoaderComponent extends ContentLoaderComponent {
}
ListContentLoaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'list-content-loader',
                template: `
  <content-loader [animate]="animate" [width]="width" [height]="height" [speed]="speed" [preserveAspectRatio]="preserveAspectRatio"
  [primaryColor]="primaryColor" [secondaryColor]="secondaryColor" [primaryOpacity]="primaryOpacity" [secondaryColor]="secondaryColor"
  [uniqueKey]="uniqueKey">
  	<svg:rect x="0" y="0" rx="3" ry="3" width="250" height="10" />
  	<svg:rect x="20" y="20" rx="3" ry="3" width="220" height="10" />
  	<svg:rect x="20" y="40" rx="3" ry="3" width="170" height="10" />
  	<svg:rect x="0" y="60" rx="3" ry="3" width="250" height="10" />
  	<svg:rect x="20" y="80" rx="3" ry="3" width="200" height="10" />
  	<svg:rect x="20" y="100" rx="3" ry="3" width="80" height="10" />
   </content-loader>
  `
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
class ContentLoaderModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: ContentLoaderModule
        };
    }
}
ContentLoaderModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule],
                declarations: [
                    ContentLoaderComponent,
                    FacebookContentLoaderComponent,
                    BulletListContentLoaderComponent,
                    ListContentLoaderComponent
                ],
                exports: [
                    ContentLoaderComponent,
                    FacebookContentLoaderComponent,
                    BulletListContentLoaderComponent,
                    ListContentLoaderComponent
                ]
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */

export { ContentLoaderComponent, ContentLoaderModule, FacebookContentLoaderComponent, ListContentLoaderComponent, BulletListContentLoaderComponent };
//# sourceMappingURL=netbasal-content-loader.js.map
