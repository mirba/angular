'use strict';

const fs = require('fs');
const path = require('path');
const prompts = require("prompts");
const execa = require('execa');

const config = require('../config/project');
const pathPackages = config.paths ? path.resolve(process.cwd(), config.paths.packages) : process.cwd();
const tools = require('./tools');

const gitRepos = fs.readdirSync(pathPackages)
    .filter(name => tools.isDirExists(path.resolve(pathPackages, name, '.git')))
    .map(name => ({ name, folder: path.resolve(pathPackages, name) }));


if (gitRepos.length > 0) {
    // Add the root repository
    gitRepos.push({ name: 'root repository', folder: process.cwd() });
}

const startPrompt = async () => {
    const filesStaged = await prompts({
        type: 'confirm',
        name: 'value',
        message: 'Have you stagged all the files you want to commit?',
        initial: false
    });

    if (!filesStaged.value) {
        console.log('No worry! It happens... Stage your file and re-run the command :)');
        return;
    }

    console.log(`\nGreat! Let's generate a conventional commit message...\n`);

    let folderRepository;
    if (gitRepos.length > 0) {
        folderRepository = await prompts({
            type: 'select',
            name: 'value',
            message: 'On which repository do you want to commit?',
            choices: gitRepos.map(repo => ({ title: repo.name, value: repo.folder })),
            initial: 0
        });

        if (!folderRepository.value) {
            console.log('Canceled....');
            return;
        }
    }

    const pushCommit = await prompts({
        type: 'confirm',
        name: 'value',
        message: 'Do you  want to push your commit after creation? (your local branch must track origin)',
        initial: true
    });

    return execa('node', [path.join(__dirname, './cz-conventional-commit.js')], {
        cwd: folderRepository && folderRepository.value || process.cwd(),
        stdin: 'inherit',
        stdout: 'inherit',
        stderr: 'inherit',
    }).then(() => {

        if (!pushCommit.value) {
            console.log('Commit created. Don\'t forget to push your work!');
            return;
        }

        return execa('git', ['push'], {
            cwd: folderRepository && folderRepository.value || process.cwd(),
            stdio: 'inherit',
        }).catch((e) => {
            console.log(e);
            process.exit(1);
        })
    })
    .catch(() => {
        console.log('Canceled.');
        process.exit(1);
    });
};

startPrompt();
