#!/usr/bin/env node

const spawn = require('cross-spawn');
const chalk = require('chalk');

const args = process.argv.slice(2);

const scriptIndex = args.findIndex(
    x => x === 'clean-package' ||
    x === 'clean-all' ||
    x === 'build-package' ||
    x === 'build-deps' ||
    x === 'build-all' ||
    x === 'build-tests' ||
    x === 'commit' ||
    x === 'compile-package' ||
    x === 'inject-openid-html' ||
    x === 'test-package' ||
    x === 'version-package' ||
    x === 'start-karma' ||
    x === 'publish' ||
    x === 'publish-all' ||
    x === 'release' ||
    x === 'generate-changelog' ||
    x === 'generate-translations' ||
    x === 'extract-app-infos' ||
    x === 'extract-git-metadata-all' ||
    x === 'extract-git-metadata'
);
const script = scriptIndex === -1 ? args[0] : args[scriptIndex];
const nodeArgs = scriptIndex > 0 ? args.slice(0, scriptIndex) : [];

switch (script) {
    case 'clean-package':
    case 'clean-all':
    case 'build-package':
    case 'build-deps':
    case 'build-all':
    case 'build-tests':
    case 'compile-package':
    case 'inject-openid-html':
    case 'commit':
    case 'test-package':
    case 'version-package':
    case 'start-karma':
    case 'publish':
    case 'publish-all':
    case 'release':
    case 'generate-changelog':
    case 'generate-translations':
    case 'extract-git-metadata-all':
    case 'extract-git-metadata':
    case 'extract-app-infos': {
        const result = spawn.sync(
            'node',
            nodeArgs
                .concat(require.resolve('../scripts/' + script))
                .concat(args.slice(scriptIndex + 1)),
            { stdio: 'inherit' }
        );
        if (result.signal) {
            if (result.signal === 'SIGKILL') {
                console.log(
                    'The build failed because the process exited too early. '+
                    'This probably means the system ran out of memory or someone called ' +
                    '`kill -9` on the process.'
                );
            } else if(result.signal === 'SIGTERM') {
                console.log(
                    'The build failed because the process exited too early. ' +
                    'Someone might have called `kill` or `killall`, or the system could ' +
                    'be shutting down.'
                )
            }
            process.exit(1);
        }
        process.exit(result.status);
        break;
    }
    default:
        console.log(chalk.red('Unknown script "' + script + '".'));
        break;
}
