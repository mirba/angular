package eu.europa.ec.digit.eui.repository;

import com.mysema.query.types.Predicate;
import com.mysema.query.types.expr.BooleanExpression;
import eu.europa.ec.digit.eui.common.dto.UserDTO;
import eu.europa.ec.digit.eui.entity.QUser;

public class UserPredicates {

    private static BooleanExpression createOrAnd(BooleanExpression left, BooleanExpression right) {
        return left == null ? right : left.and(right);
    }

    public static Predicate search(UserDTO dto) {
        if (dto == null) {
            return QUser.user.isNotNull();
        }
        else {
            BooleanExpression query = null;

            if (dto.getName() != null) {
                query = createOrAnd(query, QUser.user.name.containsIgnoreCase(dto.getName()));
            }

            if (dto.getFirstName() != null) {
                query = createOrAnd(query, QUser.user.firstName.containsIgnoreCase(dto.getFirstName()));
            }

            return query;
        }
    }
}
