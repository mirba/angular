const tools = require('@eui/tools/scripts/tools');
const utils = require('./utils');
const path = require('path');
const buildModule = require('./build-module');

function start(cliConfig, targetPath, callback) {
    const appType = cliConfig.appType;
    const appSubType = cliConfig.appSubType;
    const tag = cliConfig.tag;
    const groupId = cliConfig.groupId;
    const artifactId = cliConfig.artifactId;

    console.log(`Post build`);

    // COMMON angular
    // -------------
    console.log('--renaming .npmignore');

    const angularPath = utils.getAngularPath(targetPath, appType, artifactId);
    tools.move(path.join(angularPath, 'gitignore_TO_REPLACE'),  path.join(angularPath, '.gitignore'));

    // BUILD web-maven
    // ---------------

    if (appType === 'web-maven') {
        console.log('--web-maven : renaming package.json & pom.xml');
        if (appSubType === 'default') {
            tools.remove(path.join(targetPath, 'package_extended.json'));
            tools.remove(path.join(targetPath, 'pom_extended.xml'));
            tools.move(path.join(targetPath, 'package_default.json'),  path.join(targetPath, 'package.json'));
            tools.move(path.join(targetPath, 'pom_default.xml'),  path.join(targetPath, 'pom.xml'));
        }
        if (appSubType === 'extended') {
            tools.remove(path.join(targetPath, 'package_default.json'));
            tools.remove(path.join(targetPath, 'pom_default.xml'));
            tools.move(path.join(targetPath, 'package_extended.json'),  path.join(targetPath, 'package.json'));
            tools.move(path.join(targetPath, 'pom_extended.xml'),  path.join(targetPath, 'pom.xml'));
        }
    }


    // BUILD full-stack
    // ----------------

    if (appType === 'full-stack') {
        console.log('--full-stack : renaming package.json & web/pom.xml');
        if (appSubType === 'default') {
            tools.remove(path.join(targetPath, 'package_extended.json'));
            tools.remove(path.join(targetPath + '/' + artifactId + '-web', 'pom_extended.xml'));
            tools.move(path.join(targetPath, 'package_default.json'),  path.join(targetPath, 'package.json'));
            tools.move(path.join(targetPath + '/' + artifactId + '-web', 'pom_default.xml'),  path.join(targetPath + '/' + artifactId + '-web', 'pom.xml'));
        }
        if (appSubType === 'extended') {
            tools.remove(path.join(targetPath, 'package_default.json'));
            tools.remove(path.join(targetPath + '/' + artifactId + '-web', 'pom_default.xml'));
            tools.move(path.join(targetPath, 'package_extended.json'),  path.join(targetPath + '/' + artifactId + '-web', 'package.json'));
            tools.move(path.join(targetPath + '/' + artifactId + '-web', 'pom_extended.xml'),  path.join(targetPath + '/' + artifactId + '-web', 'pom.xml'));
        }
    }

    // GENERATING default modules for extended genenerator
    // ---------------------------------------------------

    if (appSubType === 'extended') {
        buildModule.build('module', '@app', false, angularPath + '/src/packages', function() {
            buildModule.build('module-ngrx', '@app', true, angularPath + '/src/packages');
        });
    }

    callback();
}


module.exports.start = start;
